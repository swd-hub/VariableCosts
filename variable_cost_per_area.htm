<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8" />
  <script src="https://cdn.jsdelivr.net/npm/encoding-japanese/encoding.min.js"></script>

  <title>単位面積あたり変動費計算</title>
  <style>
body {
  font-family: 'Segoe UI', 'Helvetica Neue', sans-serif;
  background-color: #f7f9fc;
  color: #333;
  padding: 30px;
  line-height: 1.6;
}

h1 {
  font-size: 1.8em;
  color: #006c9c;
  margin-bottom: 20px;
}

table {
  border-collapse: collapse;
  width: 100%;
  table-layout: fixed;
  background-color: #fff;
  box-shadow: 0 1px 3px rgba(0,0,0,0.08);
  margin-top: 20px;
  font-size: 14px;
}

th, td {
  padding: 8px 10px;
  border-bottom: 1px solid #ddd;
  text-align: right;
  word-break: break-word;
}

th {
  background-color: #e3edf4;
  font-weight: bold;
  border-bottom: 2px solid #ccc;
}

th select {
  width: 100%;
  font-size: 13px;
  padding: 4px;
  border-radius: 4px;
  border: 1px solid #ccc;
  background-color: #fff;
  text-align: right;
}

td input[type="number"] {
  width: 60px;
  padding: 4px;
  border: 1px solid #ccc;
  border-radius: 4px;
  text-align: right;
}

tr:hover td {
  background-color: #f4f8fc;
}

input[type="number"] {
  width: 70px;
  padding: 4px;
  border: 1px solid #ccc;
  border-radius: 4px;
  text-align: right;
}
input[type="text"]::placeholder {
  color: #999;
}
input[type="text"] {
  padding: 4px;
  border: 1px solid #ccc;
  border-radius: 4px;
}

button {
  background-color: #007bb5;
  color: #fff;
  border: none;
  padding: 8px 14px;
  margin-right: 8px;
  font-size: 0.9em;
  border-radius: 6px;
  cursor: pointer;
  transition: background 0.3s ease;
}

button:hover {
  background-color: #005f8e;
}

#totalCost {
  font-size: 1.1em;
  margin-top: 15px;
  color: #444;
}

  </style>
</head>
<body>
  <h1>単位面積あたり変動費計算ツール</h1>
<!--
  <p>資材データ（品名,容量,単位,予約価格）CSV:</p>
  <input type="file" id="file1" accept=".csv" />
  <button id="toggleTable1" style="display: none;">表を表示</button>
 -->   
  <div id="table1"></div>
<br>


<p>こよみ（基準使用量）データ（file2）CSV:</p>
<div id="file2-controls">
  <input type="file" id="file2" accept=".csv" />
  <button id="toggleTable2" style="display: none;">表を表示</button>
  <button id="calcFile2" style="display: none;">計算する</button>
  <button id="toggleMoneyBtn" style="display: none;">金額ありのみ表示</button>
  <button id="saveTable2CsvBtn" style="display: none;">表を保存</button>
</div>

<div id="totalCost">
  10アールあたり変動費：<span id="costPer10a">―</span> 円
  <button id="copyCostBtn">コピー</button>
</div>

<div id="table2" style="display: none;"></div>

<script>
let masterData = {};
let priceData = {};

// CSVテキストを2次元配列に変換
function parseCSV(content) {
  return content
    .trim()
    .split('\n')
    .map(row => row.split(',').map(cell => cell.trim()))
    .map(row => {
      while (row[row.length - 1] === '') row.pop();
      return row;
    });
}

// 資材価格表のテーブルを作成
function createTableForFile1(data) {
  const table = document.createElement('table');
  const maxCols = Math.max(...data.map(row => row.length));
  const categoryIndex = 0;
  const categoryValues = [...new Set(data.slice(1).map(row => row[categoryIndex]).filter(v => v))].sort();

  data.forEach((row, rowIndex) => {
    const tr = document.createElement('tr');

    for (let colIndex = 0; colIndex < maxCols; colIndex++) {
      const tag = rowIndex === 0 ? 'th' : 'td';
      const td = document.createElement(tag);
      td.style.textAlign = 'right';

      if (rowIndex === 0 && colIndex === categoryIndex) {
        const select = document.createElement('select');
        select.style.width = '100%';
        const defaultOption = document.createElement('option');
        defaultOption.value = '';
        defaultOption.textContent = '▼ 費目フィルター';
        select.appendChild(defaultOption);

        categoryValues.forEach(value => {
          const option = document.createElement('option');
          option.value = value;
          option.textContent = `▼ ${value}`;
          select.appendChild(option);
        });

        select.addEventListener('change', function () {
          const keyword = this.value;
          const allRows = table.querySelectorAll('tr');
          allRows.forEach((r, i) => {
            if (i === 0) return;
            const cell = r.querySelectorAll('td')[categoryIndex];
            const text = cell?.textContent?.trim() || '';
            r.style.display = keyword === '' || text === keyword ? '' : 'none';
          });
        });

        td.appendChild(select);
      } else {
        td.textContent = row[colIndex] ?? '';
      }

      tr.appendChild(td);
    }

    table.appendChild(tr);
  });

  return table;
}

// ✅ DOMContentLoaded: shizai.csv を自動読み込みし、テーブルに反映
window.addEventListener('DOMContentLoaded', () => {
  fetch('shizai.csv')
    .then(response => {
      if (!response.ok) throw new Error('CSVファイルの取得に失敗しました');
      return response.arrayBuffer();
    })
    .then(buffer => {
      const unicodeArray = Encoding.convert(new Uint8Array(buffer), {
        to: 'UNICODE',
        from: 'SJIS'
      });
      const text = Encoding.codeToString(unicodeArray);
      const rows = parseCSV(text);

      if (rows.length < 1) {
        alert("資材価格ファイルに有効なデータがありません。");
        return;
      }

      // priceDataを構築
      priceData = {};
      rows.slice(1).forEach(row => {
        const name = (row[1] || '').trim();
        const volume = parseFloat((row[2] || '').replace(/,/g, ''));
        const unit = (row[3] || '').trim();
        const price = parseFloat((row[4] || '').replace(/,/g, ''));

        if (name && !isNaN(price) && !isNaN(volume) && unit) {
          priceData[name] = { price, volume, unit };
        }
      });

      // 表示先divに表示
      const tableDiv = document.getElementById('table1');
      if (tableDiv) {
        const table = createTableForFile1(rows);
        tableDiv.innerHTML = '';
        tableDiv.appendChild(table);
        tableDiv.style.display = 'block';
      }
    })
    .catch(err => {
      console.error(err);
      alert('資材価格ファイルの読み込みに失敗しました。shizai.csv が存在しない可能性があります。');
    });

  // ✅ file2イベント登録（そのままでOK）
  const file2Input = document.getElementById('file2');
  if (file2Input) {
    file2Input.addEventListener('change', handleFile2Load);
  } else {
    console.warn('⚠️ file2 の input が見つかりません。');
  }
});
</script>

</body>
</html>



